{
  "openapi": "3.1.0",
  "info": {
    "title": "payments_createPaymentSession",
    "description": "",
    "version": "1.0.0"
  },
  "tags": [],
  "paths": {
    "/ams/api/v1/payments/createPaymentSession": {
      "post": {
        "summary": "createPaymentSession",
        "deprecated": false,
        "description": "Use this API to get the cashier page address. After getting the cashier page address, you can redirect the user to the cashier page to make a payment.\n",
        "tags": [],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AlipayPaymentSessionRequest"
              },
              "example": null
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AlipayPaymentSessionResponse"
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    }
  },
  "components": {
    "schemas": {
      "DeliveryEstimateInfo": {
        "type": "object",
        "properties": {
          "unit": {
            "type": "string",
            "description": "Units for the longest shipping time of logistics services. The valid values include:\n\nYEAR: Indicates that the shortest shipping time unit for logistics services is in years.\nMONTH: Indicates that the shortest shipping time unit for logistics services is in months.\nDAY: Indicates that the shortest shipping time unit for logistics services is in days.\nHOUR: Indicates that the shortest shipping time unit for logistics services is in hours.\nMINUTE: Indicates that the shortest shipping time unit for logistics services is in minutes.\nSECOND: Indicates that the shortest shipping time unit for logistics services is in seconds.\nMore information:\n\nMaximum length: 16 characters\n"
          },
          "value": {
            "type": "integer",
            "description": "Estimated value for the longest shipping time of logistics services.\n\nMore information:\n\nValue range: [0, +∞)"
          }
        },
        "required": [
          "unit",
          "value"
        ]
      },
      "DeliveryEstimate": {
        "type": "object",
        "properties": {
          "minimum": {
            "$ref": "#/components/schemas/DeliveryEstimateInfo",
            "description": "Estimated longest shipping time for logistics services."
          },
          "maximum": {
            "$ref": "#/components/schemas/DeliveryEstimateInfo",
            "description": "Estimated longest shipping time for logistics services."
          }
        }
      },
      "AlipayPaymentSessionRequest": {
        "type": "object",
        "properties": {
          "productCode": {
            "$ref": "#/components/schemas/ProductCodeType",
            "description": "Represents the payment product that is being used, which is stipulated in the contract. For Checkout Payment, the value is fixed as CASHIER_PAYMENT."
          },
          "paymentRequestId": {
            "type": "string",
            "description": "The unique ID assigned by a merchant to identify a payment request. \n\nMore information:\n\nMaximum length: 64 characters"
          },
          "order": {
            "$ref": "#/components/schemas/Order",
            "description": "The order information, such as buyer, merchant, goods, amount, shipping information, and purchase environment. This field is used for different purposes:\n\nDuring the payment process, this field is mainly used by Antom for risk control or anti-money laundering. \nAfter the payment is completed, this field is used for recording and reporting purposes such as purchase tracking and regulatory reporting."
          },
          "paymentAmount": {
            "$ref": "#/components/schemas/Amount",
            "description": "The payment amount that the merchant requests to receive in the order currency."
          },
          "paymentMethod": {
            "$ref": "#/components/schemas/PaymentMethod",
            "description": "The payment method that is used to collect the payment by the merchant or acquirer. "
          },
          "paymentSessionExpiryTime": {
            "type": "string",
            "description": "The specific date and time after which the payment session will expire. The default expiration time is 1 hour after the session creation. For example, if the session is created at 2023-7-27T12:00:01+08:30, the session expiration time is 2023-7-27T13:00:01+08:30.\n\nSpecify this parameter if you want to use a payment session expiration time that differs from the default time. The specified expiration time must be 0 to 1 hour after session creation.  \n\nMore information:\n\nThe value follows the ISO 8601 standard format. For example, \"2019-11-27T12:01:01+08:00\"."
          },
          "paymentRedirectUrl": {
            "type": "string",
            "description": "The merchant page URL that the user is redirected to after the payment is completed.\n\nMore information:\n\nMaximum length: 2048 characters"
          },
          "paymentNotifyUrl": {
            "type": "string",
            "description": "The URL that is used to receive the payment result notification.\n\nSpecify this parameter if you want to receive an asynchronous notification of the payment result. You can also set the URL to receive the result notification in Antom Dashboard. If the URL is specified in both the request and Antom Dashboard, the value specified in the request takes precedence.\n\nMore information:\n\nMaximum length: 2048 characters"
          },
          "paymentFactor": {
            "$ref": "#/components/schemas/PaymentFactor",
            "description": "Factors that impact the payment. This field is used to indicate the payment scenario.  \n\nSpecify this parameter when the value of paymentMethodType is CARD and you integrate the client-side SDK.  "
          },
          "settlementStrategy": {
            "$ref": "#/components/schemas/SettlementStrategy",
            "description": "The settlement strategy for the payment request."
          },
          "enableInstallmentCollection": {
            "type": "boolean",
            "description": "Indicates whether Antom collects the installment information for the payment. Specify this parameter if you need Antom to collect the installment information. Valid values are:\n\ntrue: indicates Antom collects installment information when the user's card supports installments. Installments are not available when the user's card does not support installments.\nfalse: indicates you do not need Antom to collect the installment information. The same applies when the value is empty or you do not specify this parameter.   "
          },
          "creditPayPlan": {
            "$ref": "#/components/schemas/CreditPayPlan",
            "description": "The credit payment plan information for this payment.\n\nSpecify this parameter when the payment supports installments and you specify the card-related information in paymentMethod.paymentMethodMetaData.  "
          },
          "merchantRegion": {
            "type": "string",
            "description": "The country or region where the merchant operates the business. The parameter is a 2-letter country or region code that follows ISO 3166 Country Codes standard.\n\nSome possible values are US, SG, HK, PK, JP, CN, BR, AU, and MY.  \n\nNote: This parameter is required when you use the Global Acquirer Gateway (GAGW) product.\n\nMore information:\n\nMaximum length: 2 characters"
          },
          "env": {
            "$ref": "#/components/schemas/Env",
            "description": "Information about the environment where the order is placed.\n\nNote: Specify this parameter when you require risk control. Providing this information helps to increase the accuracy of anti-money laundering and fraud detection, and increase payment success rates.  \n\n"
          },
          "agreementInfo": {
            "$ref": "#/components/schemas/AgreementInfo"
          },
          "riskData": {
            "$ref": "#/components/schemas/RiskData"
          },
          "productScene": {
            "type": "string",
            "description": "Specified product scenarios include valid values:\n\n​CHECKOUT_PAYMENT​: Indicates that the merchant integrates using the Checkout Page.\n​ELEMENT_PAYMENT​: Indicates that the merchant integrates using the Element.\nMore information:\n\nMaximum length: 32 characters"
          },
          "savedPaymentMethods": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PaymentMethod",
              "description": "The payment method that is used to collect the payment by the merchant or acquirer. "
            },
            "description": "Payment information stored by the user in the merchant system."
          },
          "locale": {
            "type": "string",
            "description": "Language tag specified for the Checkout Page. If this field is empty or set to automatic, the default language setting of the browser will be used, which is usually English.\n\nMore information:\n\nMaximum length: 8 characters"
          },
          "availablePaymentMethod": {
            "$ref": "#/components/schemas/AvailablePaymentMethod",
            "description": "Information on payment methods available to the user.\n\n"
          }
        },
        "required": [
          "order",
          "paymentRequestId",
          "paymentAmount",
          "settlementStrategy",
          "paymentMethod",
          "paymentRedirectUrl",
          "productCode"
        ]
      },
      "AvailablePaymentMethod": {
        "type": "object",
        "properties": {
          "paymentMethodTypeList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PaymentMethodTypeItem"
            }
          }
        }
      },
      "PaymentMethodTypeItem": {
        "type": "object",
        "properties": {
          "paymentMethodType": {
            "type": "string",
            "description": "The payment method type that is included in payment method options. See Payment methods to check the valid values. \n\nMore information:\n\nValue range: 64"
          },
          "paymentMethodOrder": {
            "type": "string",
            "description": "The priority order of the payment methods configured by the user is indicated by numerical values, with smaller numbers representing higher priority. If the user does not specify a setting, Antom will apply a default sorting method.\n\nMore information:\n\nValue range: [1, +∞)"
          },
          "expressCheckout": {
            "type": "string",
            "description": "Indicates whether the payment method selected by the user is displayed as a quick payment method. The currently supported quick payment methods include ALIPAY_CN, APPLEPAY, and GOOGLAPAY. The valid values include:\n\ntrue: The payment method selected by the user is displayed as a quick payment method.\nfalse: The payment method selected by the user is not displayed as a quick payment method.\n"
          }
        }
      },
      "RiskData": {
        "type": "object",
        "properties": {
          "order": {
            "$ref": "#/components/schemas/RiskOrder",
            "description": "The order information used for risk control purposes."
          },
          "buyer": {
            "$ref": "#/components/schemas/RiskBuyer",
            "description": "The buyer information used for risk control purposes."
          },
          "env": {
            "$ref": "#/components/schemas/RiskEnv",
            "description": "The environment information used for risk control purposes."
          },
          "riskSignal": {
            "$ref": "#/components/schemas/RiskSignal",
            "description": "The information provided by a merchant to identify a risky transaction."
          },
          "address": {
            "$ref": "#/components/schemas/RiskAddress",
            "description": "The address information used for risk control purposes."
          },
          "cardVerificationResult": {
            "$ref": "#/components/schemas/CardVerificationResult",
            "description": "The verification method that a merchant uses for a card payment."
          }
        }
      },
      "CardVerificationResult": {
        "type": "object",
        "properties": {
          "authenticationType": {
            "type": "string",
            "description": "Authentication type"
          },
          "authenticationMethod": {
            "type": "string",
            "description": "The authentication method that a merchant uses for a card payment"
          },
          "cvvResult": {
            "type": "string",
            "description": "The verification result of the card verification value (CVV)"
          },
          "avsResult": {
            "type": "string",
            "description": "The address verification result."
          },
          "authorizationCode": {
            "type": "string",
            "description": "The authorization code granted by the payment method provider for a successful 3D authentication."
          },
          "threeDSResult": {
            "$ref": "#/components/schemas/RiskThreeDSResult",
            "description": "The result of 3D Secure authentication."
          }
        },
        "required": [
          "authenticationType",
          "authenticationMethod",
          "cvvResult",
          "avsResult",
          "authorizationCode",
          "threeDSResult"
        ]
      },
      "RiskThreeDSResult": {
        "type": "object",
        "properties": {
          "threeDSVersion": {
            "type": "string",
            "description": "The version of 3D Secure protocol"
          },
          "threeDSInteractionMode": {
            "type": "string",
            "description": "Indicates the type of user interactions during 3DS 2.0 authentication"
          },
          "eci": {
            "type": "string",
            "description": "Electronic Commerce Indicator (ECI) that is returned by the card scheme"
          },
          "cavv": {
            "type": "string",
            "description": "The cardholder authentication value"
          }
        },
        "required": [
          "threeDSVersion",
          "threeDSInteractionMode",
          "eci",
          "cavv"
        ]
      },
      "RiskAddress": {
        "type": "object",
        "properties": {
          "shippingPhoneType": {
            "type": "string",
            "description": "The type of the receiver's phone number"
          },
          "isBillShipStateSame": {
            "type": "boolean",
            "description": "Indicates whether the billing state is the same as the shipping state"
          },
          "isPreviousStateSame": {
            "type": "boolean",
            "description": "Indicates whether a previous billing state is the same as the shipping state"
          },
          "locToShipDistance": {
            "type": "integer",
            "description": "The distance in meters between the buyer's location and their shipping address."
          },
          "minPreviousShipToBillDistance": {
            "type": "integer",
            "description": "The minimum distance in meters between the buyer's previous shipping address and their billing address."
          }
        },
        "required": [
          "shippingPhoneType",
          "isBillShipStateSame",
          "isPreviousStateSame",
          "locToShipDistance",
          "minPreviousShipToBillDistance"
        ]
      },
      "RiskSignal": {
        "type": "object",
        "properties": {
          "riskCode": {
            "type": "string",
            "description": "The tag assigned by a merchant to a risky transaction."
          },
          "riskReason": {
            "type": "string",
            "description": "The reason why a transaction is identified as risky provided by a merchant."
          }
        },
        "required": [
          "riskCode",
          "riskReason"
        ]
      },
      "RiskEnv": {
        "type": "object",
        "properties": {
          "ipAddressType": {
            "type": "string",
            "description": "The type of an IP address"
          }
        },
        "required": [
          "ipAddressType"
        ]
      },
      "RiskBuyer": {
        "type": "object",
        "properties": {
          "noteToMerchant": {
            "type": "string",
            "description": "The buyer's note to a merchant."
          },
          "noteToShipping": {
            "type": "string",
            "description": "The buyer's note to a deliveryman or a take-out rider."
          },
          "orderCountIn1H": {
            "type": "integer",
            "description": "The successful orders the buyer made within the last one hour."
          },
          "orderCountIn24H": {
            "type": "integer",
            "description": "The successful orders the buyer made within the last 24 hour."
          }
        },
        "required": [
          "noteToMerchant",
          "noteToShipping",
          "orderCountIn1H",
          "orderCountIn24H"
        ]
      },
      "RiskOrder": {
        "type": "object",
        "properties": {
          "orderType": {
            "type": "string",
            "description": "The order type"
          },
          "referringSite": {
            "type": "string",
            "description": "The webpage where the buyer accessed the merchant."
          }
        },
        "required": [
          "orderType",
          "referringSite"
        ]
      },
      "AgreementInfo": {
        "type": "object",
        "properties": {
          "authState": {
            "type": "string",
            "description": "The unique ID generated by the merchant to initiate an Easy Pay authorization"
          },
          "userLoginId": {
            "type": "string",
            "description": "The login ID that the user used to register in the wallet"
          },
          "userLoginType": {
            "type": "string",
            "description": "The login Type"
          },
          "displayUserLoginId": {
            "type": "string",
            "description": "The login ID that use to display"
          }
        }
      },
      "Env": {
        "type": "object",
        "properties": {
          "terminalType": {
            "$ref": "#/components/schemas/TerminalType"
          },
          "osType": {
            "$ref": "#/components/schemas/OsType"
          },
          "userAgent": {
            "type": "string"
          },
          "deviceTokenId": {
            "type": "string"
          },
          "clientIp": {
            "type": "string",
            "description": "The IP address of the client device.\n\nNote: Specify this parameter when you require risk control. Providing this information helps to increase the accuracy of anti-money laundering and fraud detection, and increase payment success rates.\n\nMore information:\n\nMaximum length: 64 characters"
          },
          "cookieId": {
            "type": "string"
          },
          "extendInfo": {
            "type": "string"
          },
          "storeTerminalId": {
            "type": "string"
          },
          "storeTerminalRequestTime": {
            "type": "string"
          },
          "browserInfo": {
            "$ref": "#/components/schemas/BrowserInfo"
          },
          "colorDepth": {
            "type": "string"
          },
          "screenHeight": {
            "type": "string"
          },
          "screenWidth": {
            "type": "string"
          },
          "timeZoneOffset": {
            "type": "integer"
          },
          "deviceBrand": {
            "type": "string"
          },
          "deviceModel": {
            "type": "string"
          },
          "deviceLanguage": {
            "type": "string"
          },
          "deviceId": {
            "type": "string"
          },
          "deviceEnvType": {
            "type": "string"
          }
        }
      },
      "BrowserInfo": {
        "type": "object",
        "properties": {
          "acceptHeader": {
            "type": "string",
            "description": "The accept header of the user's browser"
          },
          "javaEnabled": {
            "type": "boolean",
            "description": "Indicates whether the user's browser is able to run Java"
          },
          "javaScriptEnabled": {
            "type": "boolean",
            "description": "Indicates whether the user's browser is able to run Java"
          },
          "language": {
            "type": "string",
            "description": "The language of the user's browser"
          },
          "userAgent": {
            "type": "string",
            "description": "The user agent of the user's browser"
          }
        }
      },
      "OsType": {
        "type": "string",
        "enum": [
          "IOS",
          "ANDROID"
        ]
      },
      "TerminalType": {
        "type": "string",
        "enum": [
          "WEB",
          "WAP",
          "APP",
          "MINI_APP"
        ]
      },
      "CreditPayPlan": {
        "type": "object",
        "properties": {
          "installmentNum": {
            "type": "integer",
            "description": "The number of installments. The valid value is from 2 to 12.\n\nMore information:\n\nMaximum length: 8 characters"
          },
          "interval": {
            "type": "string"
          },
          "creditPayFeeType": {
            "$ref": "#/components/schemas/CreditPayFeeType",
            "description": "The value of this field is PERCENTAGE, which indicates that the fee is described in percentage with 1 - 3 digits. For example, 5 means 5%, 100 means 100%.\n\nNote: Specify this field when you want the fee information to be expressed in percentage."
          },
          "feePercentage": {
            "type": "integer",
            "description": "This field is determined by the sellers' liability. For example, 0 indicates the seller is not liable for any fee. 100 indicates the seller pays 100% of the fee.\n\nNote: Specify this field when the value of creditPayFeeType is PERCENTAGE.\n\nMore information:\n\nValue range: 0 - 100"
          }
        }
      },
      "CreditPayFeeType": {
        "type": "string",
        "enum": [
          "PERCENTAGE"
        ]
      },
      "SettlementStrategy": {
        "type": "object",
        "properties": {
          "settlementCurrency": {
            "type": "string"
          }
        }
      },
      "PaymentFactor": {
        "type": "object",
        "properties": {
          "isPaymentEvaluation": {
            "type": "boolean"
          },
          "inStorePaymentScenario": {
            "$ref": "#/components/schemas/InStorePaymentScenario"
          },
          "presentmentMode": {
            "$ref": "#/components/schemas/PresentmentMode"
          },
          "captureMode": {
            "type": "string",
            "description": "Indicates the method for capturing funds after the user authorizes the payment. Valid values are:\n\nAUTOMATIC: indicates that Antom automatically captures the funds after the authorization. The same applies when the value is empty or you do not pass in this parameter.\nMANUAL: indicates that you manually capture the funds by calling the capture (Checkout Payment) API.\nSpecify this parameter if you want to designate the capture mode of the payment.  \n\nMore information:\n\nMaximum length: 64 characters\n"
          },
          "isAuthorization": {
            "type": "boolean",
            "description": "Indicates whether the payment scenario is authorization. Specify this parameter when the value of paymentMethodType is CARD and you integrate the client-side SDK. Valid values of this parameter are:\n\ntrue: indicates that the payment scenario is authorization.\nfalse: indicates that the payment scenario is a regular payment without authorization.  \nUnder the authorization scenario, the payment funds are guaranteed and held on the payment method side. You can use the capture (Checkout Payment) API to deduct the payment funds. "
          }
        }
      },
      "PresentmentMode": {
        "type": "string",
        "enum": [
          "BUNDLE",
          "TILE",
          "UNIFIED"
        ]
      },
      "InStorePaymentScenario": {
        "type": "string",
        "enum": [
          "PaymentCode",
          "OrderCode",
          "EntryCode"
        ]
      },
      "PaymentMethod": {
        "type": "object",
        "properties": {
          "paymentMethodType": {
            "type": "string",
            "description": "The payment method type that is included in payment method options. The value of this parameter is fixed as CARD.\n\nMore information:\n\nMaximum length: 64 characters"
          },
          "paymentMethodId": {
            "type": "string",
            "description": "The unique ID that is used to identify a payment method. The value of this parameter is that of cardToken obtained from the notifyPayment or inquiryPayment API. \n\nSpecify this parameter when the value of paymentMethodType is CARD.\n\nMore information:\n\nMaximum length: 128 characters"
          },
          "paymentMethodMetaData": {
            "type": "object",
            "properties": {},
            "additionalProperties": {
              "type": "object"
            },
            "description": "Additional information required for some specific payment methods.  "
          },
          "customerId": {
            "type": "string"
          },
          "extendInfo": {
            "type": "string"
          },
          "requireIssuerAuthentication": {
            "type": "boolean"
          }
        }
      },
      "Amount": {
        "type": "object",
        "properties": {
          "currency": {
            "type": "string",
            "description": "The transaction currency that is specified in the contract. A 3-letter currency code that follows the ISO 4217 standard.\n\nMore information:\n\nMaximum length: 3 characters"
          },
          "value": {
            "type": "string",
            "description": "The amount to charge as a positive integer in the smallest currency unit. (That is, 100 cents to charge $1.00, or 100 to charge JPY 100, a 0-decimal currency).\n\nNote: For details about the smallest currency unit, see Smallest unit of the currency. \n\nMore information:\n\nValue range: 1 - unlimited\n"
          }
        },
        "required": [
          "currency",
          "value"
        ]
      },
      "Order": {
        "type": "object",
        "properties": {
          "referenceOrderId": {
            "type": "string",
            "description": "The unique ID to identify the order on the merchant side, which is assigned by the merchant that provides services or goods directly to the customer. This field is used for user consumption records display and other further actions such as disputes track or handling of customer complaints.\n\nMore information:\n\nMaximum length: 64 characters"
          },
          "orderDescription": {
            "type": "string",
            "description": "Summary description of the order, which is used for user consumption records display or other further actions.\n\nMore information:\n\nMaximum length: 256 characters"
          },
          "orderAmount": {
            "$ref": "#/components/schemas/Amount",
            "description": "The payment amount that the merchant requests to receive in the order currency."
          },
          "merchant": {
            "$ref": "#/components/schemas/Merchant"
          },
          "goods": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Goods"
            },
            "description": "Goods information, including the ID, name, price, and quantity of the goods in the order. \n\nNote: Specify this parameter if you require risk control. Providing this information helps to increase the accuracy of anti-money laundering and fraud detection, and increase payment success rates.\n\nMore information:\n\nMaximum size: 100 elements"
          },
          "shipping": {
            "$ref": "#/components/schemas/Shipping",
            "description": "Shipping information, including information about the recipient (name, phone number, email, and shipping address), and shipping service provider. \n\nSpecify this parameter when you require risk control. Providing this information helps to increase the accuracy of anti-money laundering and fraud detection, and increase payment success rates."
          },
          "buyer": {
            "$ref": "#/components/schemas/Buyer",
            "description": "Buyer information, including the ID, name, phone number, and email of the buyer.\n\nSpecify this parameter when one of the following conditions is met:\n\nYou require risk control.\nThe value of paymentMethodType is CARD. \nProviding this information helps to increase the accuracy of anti-money laundering and fraud detection, and increase payment success rates."
          },
          "env": {
            "$ref": "#/components/schemas/Env",
            "description": "Information about the environment where the order is placed.\n\nNote: Specify this parameter when you require risk control. Providing this information helps to increase the accuracy of anti-money laundering and fraud detection, and increase payment success rates.  \n\n"
          },
          "extendInfo": {
            "type": "string"
          },
          "transit": {
            "$ref": "#/components/schemas/Transit",
            "description": "Trip information, including trip modes, legs of trips and passenger information.\n\nSpecify this field if you require risk control. Providing this information helps to increase the accuracy of anti-money laundering and fraud detection, and increase payment success rates.\n\n"
          },
          "lodging": {
            "$ref": "#/components/schemas/Lodging",
            "description": "Information about lodging service that was purchased, including hotel name, hotel address, check-in date, check-out date, number of booked rooms, number of booked nights and guest names.\n\nSpecify this parameter if you require risk control. Providing this information helps to increase the accuracy of anti-money laundering and fraud detection, and increase payment success rates."
          },
          "gaming": {
            "$ref": "#/components/schemas/Gaming",
            "description": "Information about gaming top-up, including game name, the topped up user name or ID, user email and user phone number.\n\nSpecify this parameter if you require risk control. Providing this information helps to increase the accuracy of anti-money laundering and fraud detection, and increase payment success rates."
          },
          "needDeclaration": {
            "type": "boolean"
          },
          "orderType": {
            "type": "string",
            "description": "test "
          }
        },
        "required": [
          "orderAmount",
          "referenceOrderId",
          "orderType"
        ]
      },
      "Gaming": {
        "type": "object",
        "properties": {
          "gameName": {
            "type": "string",
            "description": "Game name.\n\nMore information:\n\nMaximum length: 128 characters"
          },
          "toppedUpUser": {
            "type": "string",
            "description": "Name or ID of the user whose gaming account is topped up.\n\nMore information:\n\nMaximum length: 128 characters"
          },
          "toppedUpEmail": {
            "type": "string",
            "description": "More information:\n\nMaximum length: 64 characters"
          },
          "toppedUpPhoneNo": {
            "type": "string",
            "description": "More information:\n\nMaximum length: 32 characters"
          }
        }
      },
      "Lodging": {
        "type": "object",
        "properties": {
          "hotelName": {
            "type": "string",
            "description": "Hotel name.\n\nMore information:\n\nMaximum length: 128 characters"
          },
          "hotelAddress": {
            "$ref": "#/components/schemas/Address",
            "description": "Hotel address."
          },
          "checkInDate": {
            "type": "string",
            "description": "Date on which the guest checked in. In the case of a no-show or a reservation, the scheduled arrival date.\n\nMore information:\n\nThe value follows the ISO 8601 standard format. For example, \"2019-11-27T12:01:01+08:00\".\n"
          },
          "checkOutDate": {
            "type": "string",
            "description": "Date on which the guest checked out.\n\nMore information:\n\nThe value follows the ISO 8601 standard format. For example, \"2019-11-27T12:01:01+08:00\"."
          },
          "numberOfNights": {
            "type": "integer",
            "description": "Number of rooms booked by the payer.\n\nMore information:\n\nValue range: 1 - unlimited"
          },
          "numberOfRooms": {
            "type": "integer",
            "description": "Number of nights booked by the payer.\n\nMore information:\n\nValue range: 1 - unlimited"
          },
          "guestNames": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserName"
            },
            "description": "Name of the guest under which the room is reserved.\n\nMore information:\n\nMaximum size: 100 elements"
          }
        }
      },
      "UserName": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string",
            "description": "First name. \n\nMore information:\n\nMaximum length: 32 characters"
          },
          "middleName": {
            "type": "string",
            "description": "Middle name\n\nMore information:\n\nMaximum length: 32 characters"
          },
          "lastName": {
            "type": "string",
            "description": "Last name\n\nMore information:\n\nMaximum length: 32 characters"
          },
          "fullName": {
            "type": "string",
            "description": "Full name\n\nMore information:\n\nMaximum length: 128 characters"
          }
        },
        "required": [
          "firstName",
          "lastName"
        ]
      },
      "Address": {
        "type": "object",
        "properties": {
          "region": {
            "type": "string",
            "description": "The 2-letter country or region code. For more information, see ISO 3166 Country Codes standard.\n\nMore information:\n\nMaximum length: 2 characters\n"
          },
          "state": {
            "type": "string",
            "description": "The state, country, or province name. \n\nNote: For card payments, if your business entity is in the United States, and the card issuing country is in Canada, the United States, or the United Kingdom, set the value to a region code that consists of two to three characters and follows the ISO 3166-2 standard.\n\nMore information:\n\nMaximum length: 8 characters"
          },
          "city": {
            "type": "string",
            "description": "The city, district, suburb, town, or village name.\n\nMore information:\n\nMaximum length: 32 characters"
          },
          "address1": {
            "type": "string",
            "description": "Address line 1, for example, the street address, PO box, and company name.\n\nMore information:\n\nMaximum length: 256 characters"
          },
          "address2": {
            "type": "string",
            "description": "Address line 2, for example, the apartment, suite, unit, and building information.\n\nMore information:\n\nMaximum length: 256 characters"
          },
          "zipCode": {
            "type": "string",
            "description": "ZIP or postal code. \n\nFor card payments, if your business entity is in the United States, specify this parameter according to the following parameter value requirements:\n\nOnly contains numbers, letters, hyphens, and spaces.\nMust be within ten characters.\nMore information:\n\nMaximum length: 32 characters"
          },
          "label": {
            "type": "string"
          }
        }
      },
      "Transit": {
        "type": "object",
        "properties": {
          "transitType": {
            "$ref": "#/components/schemas/TransitType",
            "description": "Trip modes, valid values are:\n\nFLIGHT: indicates that the trip mode is by plane.\nTRAIN: indicates that the trip mode is by train.\nCRUISE: indicates that the trip mode is by cruise.\nCOACH: indicates that the trip mode is by coach.\n"
          },
          "legs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Leg"
            },
            "description": "Information about sections of the trip, including departure time, arrival time, departure address, arrival address, transportation company name, carrier code and service type.\n\nMore information:\n\nMaximum size: 10 elements"
          },
          "passengers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Passenger"
            },
            "description": "Information about the passenger of the trip, including the passenger names, passenger email and phone number.\n\nMore information:\n\nMaximum size: 100 elements"
          }
        }
      },
      "Passenger": {
        "type": "object",
        "properties": {
          "passengerName": {
            "$ref": "#/components/schemas/UserName"
          },
          "passengerEmail": {
            "type": "string"
          },
          "passengerPhoneNo": {
            "type": "string"
          }
        }
      },
      "Leg": {
        "type": "object",
        "properties": {
          "departureTime": {
            "type": "string",
            "description": "Time of departure for this leg of the trip.\n\nMore information:\n\nThe value follows the ISO 8601 standard format. For example, \"2019-11-27T12:01:01+08:00\"."
          },
          "arrivalTime": {
            "type": "string",
            "description": "Time of arrival for this leg of the trip.\n\nMore information:\n\nThe value follows the ISO 8601 standard format. For example, \"2019-11-27T12:01:01+08:00\".\n"
          },
          "departureAddress": {
            "$ref": "#/components/schemas/Address",
            "description": "Hotel address."
          },
          "arrivalAddress": {
            "$ref": "#/components/schemas/Address",
            "description": "Hotel address."
          },
          "carrierName": {
            "type": "string",
            "description": "Company name of the transportation service provider for this leg of the trip.\n\nMore information:\n\nMaximum length: 128 characters"
          },
          "carrierNo": {
            "type": "string",
            "description": "Code for the carrier for this leg of the trip.\n\nMore information:\n\nMaximum length: 64 characters"
          },
          "classType": {
            "$ref": "#/components/schemas/ClassType",
            "description": "Service level for this leg of the trip. Valid values are:\n\nFIRSTLEVEL: indicates that the service is the first class. For example, flight first class, cruise luxury seat, train business class seat/1st class sleeper, coach first-level seat.\nSECONDLEVEL: indicates that the service is the second class. For example, fight business class, cruise business seat, train 1st class seat/2nd class sleeper, coach second-level seat.\nTHIRDLEVEL: indicates that the service is the third class. For example, fight economic class or premium economic, cruise normal seat, train 2nd class seat/standing, coach normal seat.\nMore information:\n\nMaximum length: 32 characters"
          },
          "departureAirportCode": {
            "type": "string",
            "description": "IATA code for the originating airport for this leg of the trip.\n\nMore information:\n\nMaximum length: 8 characters\n"
          },
          "arrivalAirportCode": {
            "type": "string",
            "description": "IATA code for the destination airport for this leg of the trip.\n\nMore information:\n\nMaximum length: 8 characters\n"
          }
        }
      },
      "ClassType": {
        "type": "string",
        "enum": [
          "FIRSTLEVEL",
          "SECONDLEVEL",
          "THIRDLEVEL"
        ]
      },
      "TransitType": {
        "type": "string",
        "enum": [
          "FLIGHT",
          "TRAIN",
          "CRUISE",
          "COACH"
        ]
      },
      "Buyer": {
        "type": "object",
        "properties": {
          "referenceBuyerId": {
            "type": "string",
            "description": "The unique ID to identify the buyer.\n\nSpecify this parameter:\n\nWhen you require risk control.\nWhen the value of paymentMethodType is CARD.\nProviding this information helps to increase the accuracy of anti-money laundering and fraud detection, and increase payment success rates. \n\nMore information:\n\nMaximum length: 64 characters\n"
          },
          "buyerName": {
            "$ref": "#/components/schemas/UserName"
          },
          "buyerPhoneNo": {
            "type": "string",
            "description": "The mobile phone number of the buyer.\n\nSpecify this parameter when one of the following conditions is met:\n\nYou require risk control.\nThe value of paymentMethodType is CARD.\nProviding this information helps to increase the accuracy of anti-money laundering and fraud detection, and increase payment success rates. \n\nMore information:\n\nMaximum length: 24 characters\n"
          },
          "buyerEmail": {
            "type": "string",
            "description": "The email of the buyer.\n\nSpecify this parameter:\n\nWhen you require risk control.\nWhen the value of paymentMethodType is CARD.\nProviding this information helps to increase the accuracy of anti-money laundering and fraud detection, and increase payment success rates. \n\nMore information:\n\nMaximum length: 64 characters"
          },
          "buyerRegistrationTime": {
            "type": "string",
            "description": "The time when the buyer registered your account. Specify this parameter if you require risk control. Providing this information helps to increase the accuracy of anti-money laundering and fraud detection, and increase payment success rates.  \n\nMore information:\n\nMaximum length: 64 characters\nThe value follows the ISO 8601 standard format. For example, \"2019-11-27T12:01:01+08:00\".\n"
          },
          "isAccountVerified": {
            "type": "boolean"
          },
          "successfulOrderCount": {
            "type": "integer"
          }
        }
      },
      "Shipping": {
        "type": "object",
        "properties": {
          "shippingName": {
            "$ref": "#/components/schemas/UserName"
          },
          "shippingAddress": {
            "$ref": "#/components/schemas/Address",
            "description": "Hotel address."
          },
          "shippingCarrier": {
            "type": "string",
            "description": "The delivery service provider for shipping a physical product, such as FedEx, UPS, or USPS. \n\nSpecify this parameter if you require risk control. Providing this information helps to increase the accuracy of anti-money laundering and fraud detection, and increase payment success rates.\n\nMore information:\n\nMaximum length: 128 characters"
          },
          "shippingPhoneNo": {
            "type": "string",
            "description": "The phone number of a recipient (including extension).\n\nSpecify this parameter when you require risk control. Providing this information helps to increase the accuracy of anti-money laundering and fraud detection, and increase payment success rates.\n\nMore information:\n\nMaximum length: 16 characters"
          },
          "shipToEmail": {
            "type": "string",
            "description": "The email address where virtual goods are sent.\n\nSpecify this parameter when one of the following conditions is met:\n\nif you require risk control.\nif you are a digital and entertainment merchant.\nProviding this information helps to increase fraud and identity theft detection.  \n\nMore information:\n\nMaximum length: 64 characters"
          },
          "shippingFeeId": {
            "type": "string",
            "description": "The ID of the shipping fee used for identifying the shipping option.\n\nMore information:\n\nMaximum length: 64 characters"
          },
          "shippingFee": {
            "$ref": "#/components/schemas/Amount",
            "description": "The payment amount that the merchant requests to receive in the order currency."
          },
          "shippingDescription": {
            "type": "string",
            "description": "Extended information about logistics-related services, including shipping time, logistics companies, etc.\n\nMore information:\n\nMaximum length: 64 characters"
          },
          "deliveryEstimate": {
            "$ref": "#/components/schemas/DeliveryEstimate",
            "description": "Estimated shipping time range."
          }
        }
      },
      "AlipayPaymentSessionResponse": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/Result",
            "description": "The result of the API call."
          },
          "paymentSessionData": {
            "type": "string",
            "description": "The encrypted payment session data. Pass the data to your front end to initiate the client-side SDK.  \n\nMore information:\n\nMaximum length: 4096 characters"
          },
          "paymentSessionExpiryTime": {
            "type": "string",
            "description": "The specific date and time after which the payment session will expire.\n\nMore information:\n\nThe value follows the ISO 8601 standard format. For example, \"2019-11-27T12:01:01+08:00\"."
          },
          "paymentSessionId": {
            "type": "string",
            "description": "The encrypted ID that is assigned by Antom to identify a payment session.  \n\nMore information:\n\nMaximum length: 64 characters"
          },
          "normalUrl": {
            "type": "string",
            "description": "The URL used to redirect to the Checkout Page.\n\nMore information:\n\nMaximum length: 2048 characters"
          }
        },
        "required": [
          "paymentSessionData",
          "paymentSessionExpiryTime",
          "paymentSessionId",
          "result"
        ]
      },
      "Result": {
        "type": "object",
        "properties": {
          "resultCode": {
            "type": "string",
            "description": "Result code. The result code that might be returned are listed in the Result/Error codes table on this page.\n\nMore information:\n\nMaximum length: 64 characters"
          },
          "resultStatus": {
            "description": "Result status. Valid values are:\n\nS: Indicates that the result status is successful.\nF: Indicates that the result status is failed. \nU: Indicates that the result status is unknown. ",
            "$ref": "#/components/schemas/ResultStatusType"
          },
          "resultMessage": {
            "type": "string",
            "description": "Result message that explains the result code.\n\nMore information:\n\nMaximum length: 256 characters\n"
          }
        },
        "required": [
          "resultCode",
          "resultStatus",
          "resultMessage"
        ]
      },
      "ResultStatusType": {
        "type": "string",
        "enum": [
          "S",
          "F",
          "U"
        ]
      },
      "Goods": {
        "type": "object",
        "properties": {
          "referenceGoodsId": {
            "type": "string",
            "description": "The unique ID to identify the goods.\n\nMore information:\n\nMaximum length: 64 characters"
          },
          "goodsName": {
            "type": "string",
            "description": "Goods name.\n\nMore information:\n\nMaximum length: 256 characters\n"
          },
          "goodsCategory": {
            "type": "string",
            "description": "The category of the goods. If the goods have multiple layers for categorization, use slashes between different categories and write the parent category before the subcategory, such as Digital Goods/Digital Vouchers/Food and Beverages.  \n\nNote: Specify this parameter if you require risk control. Providing this information helps to increase the accuracy of anti-money laundering and fraud detection, and increase payment success rates.\n\nMore information:\n\nMaximum length: 64 characters"
          },
          "goodsBrand": {
            "type": "string"
          },
          "goodsUnitAmount": {
            "$ref": "#/components/schemas/Amount",
            "description": "The payment amount that the merchant requests to receive in the order currency."
          },
          "goodsQuantity": {
            "type": "string",
            "description": "Quantity of goods. \n\nSpecify this parameter if you require risk control. Providing this information helps to increase the accuracy of anti-money laundering and fraud detection, and increase payment success rates.\n\nMore information:\n\nValue range: 1 - unlimited"
          },
          "goodsSkuName": {
            "type": "string"
          },
          "goodsUrl": {
            "type": "string",
            "description": "The URL of the website where the user places an order.\n\nSpecify this parameter if you require risk control. Providing this information helps to identify black-market behavior. \n\nMore information:\n\nMaximum length: 2048 characters"
          },
          "deliveryMethodType": {
            "type": "string",
            "description": "The delivery method of the goods. Valid values are:\n\nPHYSICAL: indicates that the delivery method is physical delivery.\nDIGITAL: indicates that the delivery method is digital delivery.\nSpecify this parameter if you require risk control. Providing this information helps to increase the accuracy of anti-money laundering and fraud detection, and increase payment success rates.  \n\nMore information:\n\nMaximum length: 32 characters\n"
          },
          "goodsImageUrl": {
            "type": "string"
          },
          "priceId": {
            "type": "string",
            "description": "The ID of the Price object. One of ​priceId​ or ​referenceGoodsId​ is required.\n\nMore information:\n\nMaximum length: 64 characters"
          }
        },
        "required": [
          "referenceGoodsId",
          "goodsName"
        ]
      },
      "Merchant": {
        "type": "object",
        "properties": {
          "referenceMerchantId": {
            "type": "string"
          },
          "merchantMCC": {
            "type": "string"
          },
          "merchantName": {
            "type": "string"
          },
          "merchantDisplayName": {
            "type": "string"
          },
          "merchantAddress": {
            "$ref": "#/components/schemas/Address",
            "description": "Hotel address."
          },
          "merchantRegisterDate": {
            "type": "string"
          },
          "store": {
            "$ref": "#/components/schemas/Store"
          },
          "merchantType": {
            "$ref": "#/components/schemas/MerchantType"
          }
        },
        "required": [
          "referenceMerchantId",
          "merchantMCC",
          "merchantName",
          "merchantDisplayName",
          "merchantAddress",
          "merchantRegisterDate",
          "merchantType",
          "store"
        ]
      },
      "MerchantType": {
        "type": "string",
        "enum": [
          "INDIVIDUAL",
          "ENTERPRISE"
        ]
      },
      "Store": {
        "type": "object",
        "properties": {
          "referenceStoreId": {
            "type": "string"
          },
          "storeName": {
            "type": "string"
          },
          "storeMCC": {
            "type": "string"
          },
          "storeDisplayName": {
            "type": "string"
          },
          "storeTerminalId": {
            "type": "string"
          },
          "storeOperatorId": {
            "type": "string"
          },
          "storeAddress": {
            "$ref": "#/components/schemas/Address",
            "description": "Hotel address."
          },
          "storePhoneNo": {
            "type": "string"
          }
        },
        "required": [
          "storeName",
          "storeMCC",
          "storeDisplayName",
          "storeTerminalId",
          "storeOperatorId",
          "storeAddress",
          "storePhoneNo",
          "referenceStoreId"
        ]
      },
      "ProductCodeType": {
        "type": "string",
        "enum": [
          "CASHIER_PAYMENT",
          "AGREEMENT_PAYMENT",
          "IN_STORE_PAYMENT"
        ]
      }
    },
    "securitySchemes": {}
  },
  "servers": [
    {
      "url": "https://open-sea-global.alipay.com/ams/api/v1/payments/createPaymentSession",
      "description": "正式环境"
    }
  ]
}
